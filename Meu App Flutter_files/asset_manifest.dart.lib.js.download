// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.1.3 (stable) (Tue Sep 26 14:25:13 2023 +0000) on "windows_x64"
// Module: packages/flutter/src/services/asset_manifest.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart'], (function load__packages__flutter__src__services__asset_manifest_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const typed_data = dart_sdk.typed_data;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const asset_bundle = packages__flutter__src__services__text_editing_delta$46dart.src__services__asset_bundle;
  const message_codecs = packages__flutter__src__services__text_editing_delta$46dart.src__services__message_codecs;
  var asset_manifest = Object.create(dart.library);
  var $containsKey = dartx.containsKey;
  var $_get = dartx._get;
  var $cast = dartx.cast;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $_set = dartx._set;
  var $remove = dartx.remove;
  var $keys = dartx.keys;
  var $addAll = dartx.addAll;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    ByteDataTo_AssetManifestBin: () => (T.ByteDataTo_AssetManifestBin = dart.constFn(dart.fnType(asset_manifest._AssetManifestBin, [typed_data.ByteData])))(),
    ListOfAssetMetadata: () => (T.ListOfAssetMetadata = dart.constFn(core.List$(asset_manifest.AssetMetadata)))(),
    IdentityMapOfString$ListOfAssetMetadata: () => (T.IdentityMapOfString$ListOfAssetMetadata = dart.constFn(_js_helper.IdentityMap$(core.String, T.ListOfAssetMetadata())))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    MapOfObjectN$ObjectN: () => (T.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T.ObjectN(), T.ObjectN())))(),
    JSArrayOfObjectN: () => (T.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T.ObjectN())))(),
    IterableOfObjectN: () => (T.IterableOfObjectN = dart.constFn(core.Iterable$(T.ObjectN())))(),
    doubleN: () => (T.doubleN = dart.constFn(dart.nullable(core.double)))(),
    MapOfObjectN$ObjectNToAssetMetadata: () => (T.MapOfObjectN$ObjectNToAssetMetadata = dart.constFn(dart.fnType(asset_manifest.AssetMetadata, [T.MapOfObjectN$ObjectN()])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(asset_manifest._AssetManifestBin['_#fromStandardMessageCodecMessage#tearOff'], T.ByteDataTo_AssetManifestBin());
    },
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
      }, message_codecs.StandardMessageCodec.prototype));
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = ["package:flutter/src/services/asset_manifest.dart"];
  asset_manifest.AssetManifest = class AssetManifest extends core.Object {
    static loadFromAssetBundle(bundle) {
      return bundle.loadStructuredBinaryData(asset_manifest.AssetManifest, "AssetManifest.bin", C[0] || CT.C0);
    }
  };
  (asset_manifest.AssetManifest.new = function() {
    ;
  }).prototype = asset_manifest.AssetManifest.prototype;
  dart.addTypeTests(asset_manifest.AssetManifest);
  dart.addTypeCaches(asset_manifest.AssetManifest);
  dart.setStaticMethodSignature(asset_manifest.AssetManifest, () => ['loadFromAssetBundle']);
  dart.setLibraryUri(asset_manifest.AssetManifest, I[0]);
  var _typeCastedData = dart.privateName(asset_manifest, "_typeCastedData");
  var _data = dart.privateName(asset_manifest, "_data");
  asset_manifest._AssetManifestBin = class _AssetManifestBin extends core.Object {
    static ['_#new#tearOff'](standardMessageData) {
      return new asset_manifest._AssetManifestBin.new(standardMessageData);
    }
    static fromStandardMessageCodecMessage(message) {
      let data = (C[1] || CT.C1).decodeMessage(message);
      return new asset_manifest._AssetManifestBin.new(T.MapOfObjectN$ObjectN().as(data));
    }
    static ['_#fromStandardMessageCodecMessage#tearOff'](message) {
      return asset_manifest._AssetManifestBin.fromStandardMessageCodecMessage(message);
    }
    getAssetVariants(key) {
      let t$360;
      if (!this[_typeCastedData][$containsKey](key)) {
        let variantData = this[_data][$_get](key);
        if (variantData == null) {
          return null;
        }
        this[_typeCastedData][$_set](key, T.IterableOfObjectN().as((t$360 = this[_data][$_get](key), t$360 == null ? T.JSArrayOfObjectN().of([]) : t$360))[$cast](T.MapOfObjectN$ObjectN())[$map](asset_manifest.AssetMetadata, dart.fn(data => {
          let asset = core.String.as(dart.nullCheck(data[$_get]("asset")));
          let dpr = data[$_get]("dpr");
          return new asset_manifest.AssetMetadata.new({key: core.String.as(dart.nullCheck(data[$_get]("asset"))), targetDevicePixelRatio: T.doubleN().as(dpr), main: key === asset});
        }, T.MapOfObjectN$ObjectNToAssetMetadata()))[$toList]());
        this[_data][$remove](key);
      }
      return dart.nullCheck(this[_typeCastedData][$_get](key));
    }
    listAssets() {
      return (() => {
        let t$360 = T.ListOfString().of(this[_data][$keys][$cast](core.String));
        t$360[$addAll](this[_typeCastedData][$keys]);
        return t$360;
      })();
    }
  };
  (asset_manifest._AssetManifestBin.new = function(standardMessageData) {
    this[_typeCastedData] = new (T.IdentityMapOfString$ListOfAssetMetadata()).new();
    this[_data] = standardMessageData;
    ;
  }).prototype = asset_manifest._AssetManifestBin.prototype;
  dart.addTypeTests(asset_manifest._AssetManifestBin);
  dart.addTypeCaches(asset_manifest._AssetManifestBin);
  asset_manifest._AssetManifestBin[dart.implements] = () => [asset_manifest.AssetManifest];
  dart.setMethodSignature(asset_manifest._AssetManifestBin, () => dart.global.Object.setPrototypeOf({
    getAssetVariants: dart.fnType(dart.nullable(core.List$(asset_manifest.AssetMetadata)), [core.String]),
    listAssets: dart.fnType(core.List$(core.String), [])
  }, dart.getMethods(dart.global.Object.getPrototypeOf(asset_manifest._AssetManifestBin))));
  dart.setStaticMethodSignature(asset_manifest._AssetManifestBin, () => ['fromStandardMessageCodecMessage']);
  dart.setLibraryUri(asset_manifest._AssetManifestBin, I[0]);
  dart.setFieldSignature(asset_manifest._AssetManifestBin, () => dart.global.Object.setPrototypeOf({
    [_data]: dart.finalFieldType(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))),
    [_typeCastedData]: dart.finalFieldType(core.Map$(core.String, core.List$(asset_manifest.AssetMetadata)))
  }, dart.getFields(dart.global.Object.getPrototypeOf(asset_manifest._AssetManifestBin))));
  var targetDevicePixelRatio$ = dart.privateName(asset_manifest, "AssetMetadata.targetDevicePixelRatio");
  var key$ = dart.privateName(asset_manifest, "AssetMetadata.key");
  var main$ = dart.privateName(asset_manifest, "AssetMetadata.main");
  asset_manifest.AssetMetadata = class AssetMetadata extends core.Object {
    get targetDevicePixelRatio() {
      return this[targetDevicePixelRatio$];
    }
    set targetDevicePixelRatio(value) {
      super.targetDevicePixelRatio = value;
    }
    get key() {
      return this[key$];
    }
    set key(value) {
      super.key = value;
    }
    get main() {
      return this[main$];
    }
    set main(value) {
      super.main = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let targetDevicePixelRatio = opts && 'targetDevicePixelRatio' in opts ? opts.targetDevicePixelRatio : null;
      let main = opts && 'main' in opts ? opts.main : null;
      return new asset_manifest.AssetMetadata.new({key: key, targetDevicePixelRatio: targetDevicePixelRatio, main: main});
    }
  };
  (asset_manifest.AssetMetadata.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let targetDevicePixelRatio = opts && 'targetDevicePixelRatio' in opts ? opts.targetDevicePixelRatio : null;
    let main = opts && 'main' in opts ? opts.main : null;
    this[key$] = key;
    this[targetDevicePixelRatio$] = targetDevicePixelRatio;
    this[main$] = main;
    ;
  }).prototype = asset_manifest.AssetMetadata.prototype;
  dart.addTypeTests(asset_manifest.AssetMetadata);
  dart.addTypeCaches(asset_manifest.AssetMetadata);
  dart.setLibraryUri(asset_manifest.AssetMetadata, I[0]);
  dart.setFieldSignature(asset_manifest.AssetMetadata, () => dart.global.Object.setPrototypeOf({
    targetDevicePixelRatio: dart.finalFieldType(dart.nullable(core.double)),
    key: dart.finalFieldType(core.String),
    main: dart.finalFieldType(core.bool)
  }, dart.getFields(dart.global.Object.getPrototypeOf(asset_manifest.AssetMetadata))));
  dart.defineLazy(asset_manifest, {
    /*asset_manifest._kAssetManifestFilename*/get _kAssetManifestFilename() {
      return "AssetManifest.bin";
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/services/asset_manifest.dart", {
    "package:flutter/src/services/asset_manifest.dart": asset_manifest
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["asset_manifest.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAsB+D;AAC3D,YAAO,AAAO,OAAD;IACf;;;;EAmBF;;;;;;;;;;;2CAiBqE;AACnD,iBAAoC,8BAAc,OAAO;AACvE,YAAO,0CAAuB,4BAAL,IAAI;IAC/B;;;;qBAM6C;;AAI3C,WAAK,AAAgB,oCAAY,GAAG;AACpB,0BAAc,AAAK,mBAAC,GAAG;AACrC,YAAI,AAAY,WAAD;AACb,gBAAO;;AAaE,QAXX,AAAe,6BAAC,GAAG,EAAiC,AACjD,AACA,AASA,0BAXiC,QAAX,AAAK,mBAAC,GAAG,GAAJ,gBAAkB,2GAEzC,QAAuB;AACb,sBAAuB,eAAF,eAAb,AAAI,IAAA,QAAC;AACZ,oBAAM,AAAI,IAAA,QAAC;AACzB,gBAAO,4CACe,eAAF,eAAb,AAAI,IAAA,QAAC,oCACkB,eAAJ,GAAG,SACrB,AAAI,GAAD,KAAI,KAAK;;AAKP,QAAjB,AAAM,qBAAO,GAAG;;AAGlB,YAA2B,gBAApB,AAAe,6BAAC,GAAG;IAC5B;;AAIE,YAAe;wCAAI,AAAM,AAAK;AAAmC,uBAAhB;;;IACnD;;mDA1CwC;IAQD,wBAA+C;IARlB,cAAE,mBAAmB;;;;;;;;;;;;;;;;;;;;IAiE3E;;;;;;IAID;;;;;;IAIF;;;;;;;;;;;;;;QAvBK;QACA;QACA;IAFA;IACA;IACA;;EACd;;;;;;;;;;MAjGS,sCAAuB","file":"../../../../../../../packages/flutter/src/services/asset_manifest.dart.lib.js"}');
  // Exports:
  return {
    src__services__asset_manifest: asset_manifest
  };
}));

//# sourceMappingURL=asset_manifest.dart.lib.js.map
