// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.1.3 (stable) (Tue Sep 26 14:25:13 2023 +0000) on "windows_x64"
// Module: packages/material_color_utilities/quantize/quantizer_celebi.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/material_color_utilities/quantize/quantizer_wu.dart', 'packages/material_color_utilities/quantize/quantizer_wsmeans.dart', 'packages/material_color_utilities/quantize/src/point_provider_lab.dart', 'packages/material_color_utilities/quantize/quantizer.dart'], (function load__packages__material_color_utilities__quantize__quantizer_celebi_dart(dart_sdk, packages__material_color_utilities__quantize__quantizer_wu$46dart, packages__material_color_utilities__quantize__quantizer_wsmeans$46dart, packages__material_color_utilities__quantize__src__point_provider_lab$46dart, packages__material_color_utilities__quantize__quantizer$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const quantizer_wu = packages__material_color_utilities__quantize__quantizer_wu$46dart.quantize__quantizer_wu;
  const quantizer_wsmeans = packages__material_color_utilities__quantize__quantizer_wsmeans$46dart.quantize__quantizer_wsmeans;
  const point_provider_lab = packages__material_color_utilities__quantize__src__point_provider_lab$46dart.quantize__src__point_provider_lab;
  const quantizer = packages__material_color_utilities__quantize__quantizer$46dart.quantize__quantizer;
  var quantizer_celebi = Object.create(dart.library);
  var $keys = dartx.keys;
  var $toList = dartx.toList;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:material_color_utilities/quantize/quantizer_celebi.dart"];
  quantizer_celebi.QuantizerCelebi = class QuantizerCelebi extends core.Object {
    quantize(pixels, maxColors, opts) {
      let returnInputPixelToClusterPixel = opts && 'returnInputPixelToClusterPixel' in opts ? opts.returnInputPixelToClusterPixel : false;
      return async.async(quantizer.QuantizerResult, function* quantize() {
        let wu = new quantizer_wu.QuantizerWu.new();
        let wuResult = (yield wu.quantize(pixels, maxColors));
        let wsmeansResult = quantizer_wsmeans.QuantizerWsmeans.quantize(pixels, maxColors, {startingClusters: wuResult.colorToCount[$keys][$toList](), pointProvider: new point_provider_lab.PointProviderLab.new(), returnInputPixelToClusterPixel: returnInputPixelToClusterPixel});
        return wsmeansResult;
      });
    }
    static ['_#new#tearOff']() {
      return new quantizer_celebi.QuantizerCelebi.new();
    }
  };
  (quantizer_celebi.QuantizerCelebi.new = function() {
    ;
  }).prototype = quantizer_celebi.QuantizerCelebi.prototype;
  dart.addTypeTests(quantizer_celebi.QuantizerCelebi);
  dart.addTypeCaches(quantizer_celebi.QuantizerCelebi);
  quantizer_celebi.QuantizerCelebi[dart.implements] = () => [quantizer.Quantizer];
  dart.setMethodSignature(quantizer_celebi.QuantizerCelebi, () => dart.global.Object.setPrototypeOf({quantize: dart.fnType(async.Future$(quantizer.QuantizerResult), [core.Iterable$(core.int), core.int], {returnInputPixelToClusterPixel: core.bool}, {})}, dart.getMethods(dart.global.Object.getPrototypeOf(quantizer_celebi.QuantizerCelebi))));
  dart.setLibraryUri(quantizer_celebi.QuantizerCelebi, I[0]);
  dart.trackLibraries("packages/material_color_utilities/quantize/quantizer_celebi.dart", {
    "package:material_color_utilities/quantize/quantizer_celebi.dart": quantizer_celebi
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["quantizer_celebi.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;aAqBiD,QAAY;UACjD;AADsB;AAExB,iBAAK;AACL,wBAAW,MAAM,AAAG,EAAD,UAAU,MAAM,EAAE,SAAS;AAC9C,4BAAiC,4CAAS,MAAM,EAAE,SAAS,qBAC3C,AAAS,AAAa,AAAK,QAAnB,gDACX,+EACiB,8BAA8B;AAClE,cAAO,cAAa;MACtB;;;;;;;;EACF","file":"../../../../../../../../../../../packages/material_color_utilities/quantize/quantizer_celebi.dart.lib.js"}');
  // Exports:
  return {
    quantize__quantizer_celebi: quantizer_celebi
  };
}));

//# sourceMappingURL=quantizer_celebi.dart.lib.js.map
