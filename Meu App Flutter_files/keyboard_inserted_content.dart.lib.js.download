// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.1.3 (stable) (Tue Sep 26 14:25:13 2023 +0000) on "windows_x64"
// Module: packages/flutter/src/services/keyboard_inserted_content.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/object.dart'], (function load__packages__flutter__src__services__keyboard_inserted_content_dart(dart_sdk, packages__flutter__src__foundation__object$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _native_typed_data = dart_sdk._native_typed_data;
  const typed_data = dart_sdk.typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  var keyboard_inserted_content = Object.create(dart.library);
  var $_get = dartx._get;
  var $isNotEmpty = dartx.isNotEmpty;
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    ListOfint: () => (T.ListOfint = dart.constFn(core.List$(core.int)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:flutter/src/services/keyboard_inserted_content.dart"];
  var mimeType$ = dart.privateName(keyboard_inserted_content, "KeyboardInsertedContent.mimeType");
  var uri$ = dart.privateName(keyboard_inserted_content, "KeyboardInsertedContent.uri");
  var data$ = dart.privateName(keyboard_inserted_content, "KeyboardInsertedContent.data");
  keyboard_inserted_content.KeyboardInsertedContent = class KeyboardInsertedContent extends core.Object {
    get mimeType() {
      return this[mimeType$];
    }
    set mimeType(value) {
      super.mimeType = value;
    }
    get uri() {
      return this[uri$];
    }
    set uri(value) {
      super.uri = value;
    }
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let uri = opts && 'uri' in opts ? opts.uri : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new keyboard_inserted_content.KeyboardInsertedContent.new({mimeType: mimeType, uri: uri, data: data});
    }
    static ['_#fromJson#tearOff'](metadata) {
      return new keyboard_inserted_content.KeyboardInsertedContent.fromJson(metadata);
    }
    get hasData() {
      let t$360, t$360$;
      t$360$ = (t$360 = this.data, t$360 == null ? null : t$360[$isNotEmpty]);
      return t$360$ == null ? false : t$360$;
    }
    toString() {
      return object.objectRuntimeType(this, "KeyboardInsertedContent") + "(" + this.mimeType + ", " + this.uri + ", " + dart.str(this.data) + ")";
    }
    _equals(other) {
      if (other == null) return false;
      if (!other[$runtimeType]._equals(this[$runtimeType])) {
        return false;
      }
      return keyboard_inserted_content.KeyboardInsertedContent.is(other) && other.mimeType === this.mimeType && other.uri === this.uri && dart.equals(other.data, this.data);
    }
    get hashCode() {
      return core.Object.hash(this.mimeType, this.uri, this.data);
    }
  };
  (keyboard_inserted_content.KeyboardInsertedContent.new = function(opts) {
    let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
    let uri = opts && 'uri' in opts ? opts.uri : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[mimeType$] = mimeType;
    this[uri$] = uri;
    this[data$] = data;
    ;
  }).prototype = keyboard_inserted_content.KeyboardInsertedContent.prototype;
  (keyboard_inserted_content.KeyboardInsertedContent.fromJson = function(metadata) {
    this[mimeType$] = core.String.as(metadata[$_get]("mimeType"));
    this[uri$] = core.String.as(metadata[$_get]("uri"));
    this[data$] = metadata[$_get]("data") != null ? _native_typed_data.NativeUint8List.fromList(T.ListOfint().from(core.Iterable.as(metadata[$_get]("data")))) : null;
    ;
  }).prototype = keyboard_inserted_content.KeyboardInsertedContent.prototype;
  dart.addTypeTests(keyboard_inserted_content.KeyboardInsertedContent);
  dart.addTypeCaches(keyboard_inserted_content.KeyboardInsertedContent);
  dart.setGetterSignature(keyboard_inserted_content.KeyboardInsertedContent, () => dart.global.Object.setPrototypeOf({hasData: core.bool}, dart.getGetters(dart.global.Object.getPrototypeOf(keyboard_inserted_content.KeyboardInsertedContent))));
  dart.setLibraryUri(keyboard_inserted_content.KeyboardInsertedContent, I[0]);
  dart.setFieldSignature(keyboard_inserted_content.KeyboardInsertedContent, () => dart.global.Object.setPrototypeOf({
    mimeType: dart.finalFieldType(core.String),
    uri: dart.finalFieldType(core.String),
    data: dart.finalFieldType(dart.nullable(typed_data.Uint8List))
  }, dart.getFields(dart.global.Object.getPrototypeOf(keyboard_inserted_content.KeyboardInsertedContent))));
  dart.defineExtensionMethods(keyboard_inserted_content.KeyboardInsertedContent, ['toString', '_equals']);
  dart.defineExtensionAccessors(keyboard_inserted_content.KeyboardInsertedContent, ['hashCode']);
  dart.trackLibraries("packages/flutter/src/services/keyboard_inserted_content.dart", {
    "package:flutter/src/services/keyboard_inserted_content.dart": keyboard_inserted_content
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["keyboard_inserted_content.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8Be;;;;;;IAGA;;;;;;IAGI;;;;;;;;;;;;;;;;;AAGG,0DAAM;YAAN,kBAAoB;IAAK;;AAGxB,YAAG,AAA4E,0BAA1D,MAAM,6BAA2B,MAAE,gBAAQ,OAAG,WAAG,gBAAG,aAAI;IAAE;YAG5E;;AACtB,WAAI,AAAM,KAAD,uBAAgB;AACvB,cAAO;;AAET,YAAa,AAGT,sDAHG,KAAK,KACL,AAAM,AAAS,KAAV,cAAa,iBAClB,AAAM,AAAI,KAAL,SAAQ,YACF,YAAX,AAAM,KAAD,OAAS;IACvB;;AAGoB,YAAO,kBAAK,eAAU,UAAK;IAAK;;;QArCP;QAAwB;QAAU;IAAlC;IAAwB;IAAU;;EAAM;yEAG/B;IACzC,kBAAuB,eAArB,AAAQ,QAAA,QAAC;IAChB,aAAkB,eAAhB,AAAQ,QAAA,QAAC;IACV,cAAE,AAAQ,AAAS,QAAT,QAAC,kBACA,4CAAS,mBAAgC,iBAAjB,AAAQ,QAAA,QAAC,aAC3C;;EAAI","file":"../../../../../../../packages/flutter/src/services/keyboard_inserted_content.dart.lib.js"}');
  // Exports:
  return {
    src__services__keyboard_inserted_content: keyboard_inserted_content
  };
}));

//# sourceMappingURL=keyboard_inserted_content.dart.lib.js.map
